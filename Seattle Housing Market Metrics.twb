<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.22.1117.1841                               -->
<workbook original-version='18.1' source-build='2022.4.0 (20224.22.1117.1841)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='regression_data1 (regression_data)' inline='true' name='federated.0ibg9u21a1zdsg17cetup0v5alcd' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='regression_data' name='excel-direct.01ljpp91bfys5z19oljxb0lazwx7'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Owner/DA/Classwork/0 Activities/Projects/midproject/MB_House_Pricing_Regression/regression_data(labeled).xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.01ljpp91bfys5z19oljxb0lazwx7' name='regression_data1' table='[regression_data1$]' type='table'>
          <columns gridOrigin='A1:U21598:no:A1:U21598:0' header='yes' outcome='6'>
            <column datatype='string' name='id' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='integer' name='bedrooms' ordinal='2' />
            <column datatype='real' name='bathrooms' ordinal='3' />
            <column datatype='integer' name='sqft_living' ordinal='4' />
            <column datatype='integer' name='sqft_lot' ordinal='5' />
            <column datatype='real' name='floors' ordinal='6' />
            <column datatype='integer' name='waterfront' ordinal='7' />
            <column datatype='integer' name='view' ordinal='8' />
            <column datatype='integer' name='condition' ordinal='9' />
            <column datatype='integer' name='grade' ordinal='10' />
            <column datatype='integer' name='sqft_above' ordinal='11' />
            <column datatype='integer' name='sqft_basement' ordinal='12' />
            <column datatype='integer' name='yr_built' ordinal='13' />
            <column datatype='integer' name='yr_renovated' ordinal='14' />
            <column datatype='integer' name='zipcode' ordinal='15' />
            <column datatype='real' name='lat' ordinal='16' />
            <column datatype='real' name='long' ordinal='17' />
            <column datatype='integer' name='sqft_living15' ordinal='18' />
            <column datatype='integer' name='sqft_lot15' ordinal='19' />
            <column datatype='integer' name='price' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.01ljpp91bfys5z19oljxb0lazwx7' name='regression_data1' table='[regression_data1$]' type='table'>
          <columns gridOrigin='A1:U21598:no:A1:U21598:0' header='yes' outcome='6'>
            <column datatype='string' name='id' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='integer' name='bedrooms' ordinal='2' />
            <column datatype='real' name='bathrooms' ordinal='3' />
            <column datatype='integer' name='sqft_living' ordinal='4' />
            <column datatype='integer' name='sqft_lot' ordinal='5' />
            <column datatype='real' name='floors' ordinal='6' />
            <column datatype='integer' name='waterfront' ordinal='7' />
            <column datatype='integer' name='view' ordinal='8' />
            <column datatype='integer' name='condition' ordinal='9' />
            <column datatype='integer' name='grade' ordinal='10' />
            <column datatype='integer' name='sqft_above' ordinal='11' />
            <column datatype='integer' name='sqft_basement' ordinal='12' />
            <column datatype='integer' name='yr_built' ordinal='13' />
            <column datatype='integer' name='yr_renovated' ordinal='14' />
            <column datatype='integer' name='zipcode' ordinal='15' />
            <column datatype='real' name='lat' ordinal='16' />
            <column datatype='real' name='long' ordinal='17' />
            <column datatype='integer' name='sqft_living15' ordinal='18' />
            <column datatype='integer' name='sqft_lot15' ordinal='19' />
            <column datatype='integer' name='price' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U21598:no:A1:U21598:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bedrooms</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bedrooms]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>bedrooms</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bathrooms</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bathrooms]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>bathrooms</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sqft_living</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sqft_living]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>sqft_living</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sqft_lot</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sqft_lot]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>sqft_lot</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>floors</remote-name>
            <remote-type>5</remote-type>
            <local-name>[floors]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>floors</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>waterfront</remote-name>
            <remote-type>20</remote-type>
            <local-name>[waterfront]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>waterfront</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>view</remote-name>
            <remote-type>20</remote-type>
            <local-name>[view]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>view</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>condition</remote-name>
            <remote-type>20</remote-type>
            <local-name>[condition]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>condition</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>grade</remote-name>
            <remote-type>20</remote-type>
            <local-name>[grade]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>grade</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sqft_above</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sqft_above]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>sqft_above</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sqft_basement</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sqft_basement]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>sqft_basement</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>yr_built</remote-name>
            <remote-type>20</remote-type>
            <local-name>[yr_built]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>yr_built</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>yr_renovated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[yr_renovated]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>yr_renovated</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zipcode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[zipcode]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>zipcode</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[long]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>long</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sqft_living15</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sqft_living15]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>sqft_living15</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sqft_lot15</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sqft_lot15]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>sqft_lot15</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[regression!data1_26A14A7984284464BBB8B91BDC9375F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='None' caption='Bathrooms (bin)' datatype='integer' name='[Bathrooms (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[bathrooms]' peg='0' size='1' />
      </column>
      <column aggregation='None' datatype='integer' name='[Bedrooms (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[bedrooms]' peg='0' size='1' />
      </column>
      <column caption='Price Trends by Periods' datatype='string' name='[Calculation_1312799340457521152]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [yr_built]&lt;2000 THEN &quot;1900-1999&quot;&#13;&#10;ELSEIF [yr_built]&lt;2010 THEN &quot;2000-2009&quot;&#13;&#10;ELSE &quot;2010 - Present&quot;&#13;&#10;END' />
      </column>
      <column caption='Price Trends by Periods of Time' datatype='string' name='[Calculation_1312799340667265028]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [yr_built]&lt;2000 THEN &quot;1900-1999&quot;&#13;&#10;ELSEIF [yr_built]&lt;2010 THEN &quot;2000-2009&quot;&#13;&#10;ELSE &quot;2010 - Present&quot;&#13;&#10;END' />
      </column>
      <column caption='Decades ' datatype='string' name='[Calculation_1363746311673958404]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [yr_built]&lt;1910 THEN &quot;1900-1909&quot;&#13;&#10;ELSEIF [yr_built]&lt;1920 THEN &quot;1910-1919&quot;&#13;&#10;ELSEIF [yr_built]&lt;1930 THEN &quot;1920-1929&quot;&#13;&#10;ELSEIF [yr_built]&lt;1940 THEN &quot;1930-1939&quot;&#13;&#10;ELSEIF [yr_built]&lt;1950 THEN &quot;1940-1949&quot;&#13;&#10;ELSEIF [yr_built]&lt;1960 THEN &quot;1950-1959&quot;&#13;&#10;ELSEIF [yr_built]&lt;1970 THEN &quot;1960-1969&quot;&#13;&#10;ELSEIF [yr_built]&lt;1980 THEN &quot;1970-1979&quot;&#13;&#10;ELSEIF [yr_built]&lt;1990 THEN &quot;1980-1989&quot;&#13;&#10;ELSEIF [yr_built]&lt;2000 THEN &quot;1990-1999&quot;&#13;&#10;ELSEIF [yr_built]&lt;2010 THEN &quot;2000-2009&quot;&#13;&#10;ELSE &quot;2010 - Present&quot;&#13;&#10;END' />
      </column>
      <column aggregation='None' caption='Price (bin)' datatype='integer' name='[Price (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='4' formula='[price]' peg='0' size='50000' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='regression_data1' datatype='table' name='[__tableau_internal_object_id__].[regression!data1_26A14A7984284464BBB8B91BDC9375F8]' role='measure' type='quantitative' />
      <column caption='Bathrooms' datatype='real' name='[bathrooms]' role='measure' type='quantitative' />
      <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
      <column caption='Condition' datatype='integer' name='[condition]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Floors' datatype='real' name='[floors]' role='measure' type='quantitative' />
      <column caption='Grade' datatype='integer' name='[grade]' role='measure' type='quantitative' />
      <column caption='Id' datatype='string' name='[id]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Long' datatype='real' name='[long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
      <column caption='Sqft Above' datatype='integer' name='[sqft_above]' role='measure' type='quantitative' />
      <column caption='Sqft Basement' datatype='integer' name='[sqft_basement]' role='measure' type='quantitative' />
      <column caption='Sqft Living15' datatype='integer' name='[sqft_living15]' role='measure' type='quantitative' />
      <column caption='Sqft Living' datatype='integer' name='[sqft_living]' role='measure' type='quantitative' />
      <column caption='Sqft Lot15' datatype='integer' name='[sqft_lot15]' role='measure' type='quantitative' />
      <column caption='Sqft Lot' datatype='integer' name='[sqft_lot]' role='measure' type='quantitative' />
      <column caption='View' datatype='integer' name='[view]' role='measure' type='quantitative' />
      <column caption='Waterfront' datatype='integer' name='[waterfront]' role='measure' type='quantitative' />
      <column caption='Yr Built' datatype='integer' name='[yr_built]' role='dimension' type='ordinal' />
      <column caption='Yr Renovated' datatype='integer' name='[yr_renovated]' role='dimension' type='quantitative' />
      <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column-instance column='[bathrooms]' derivation='Count' name='[cnt:bathrooms:qk]' pivot='key' type='quantitative' />
      <column-instance column='[bedrooms]' derivation='Count' name='[cnt:bedrooms:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sqft_lot15]' derivation='Count' name='[cnt:sqft_lot15:ok]' pivot='key' type='ordinal' />
      <column-instance column='[bathrooms]' derivation='CountD' name='[ctd:bathrooms:qk]' pivot='key' type='quantitative' />
      <column-instance column='[bedrooms]' derivation='CountD' name='[ctd:bedrooms:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Yr Renovated Set 2]' derivation='InOut' name='[io:Yr Renovated Set 2:nk]' pivot='key' type='nominal' />
      <column-instance column='[Bathrooms (bin)]' derivation='None' name='[none:Bathrooms (bin):ok]' pivot='key' type='ordinal' />
      <column-instance column='[Bedrooms (bin)]' derivation='None' name='[none:Bedrooms (bin):ok]' pivot='key' type='ordinal' />
      <column-instance column='[bedrooms]' derivation='None' name='[none:bedrooms:qk]' pivot='key' type='quantitative' />
      <column-instance column='[bathrooms]' derivation='Sum' name='[sum:bathrooms:qk]' pivot='key' type='quantitative' />
      <column-instance column='[bedrooms]' derivation='Sum' name='[sum:bedrooms:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Bathrooms (bin),Bedrooms (bin))' hidden='true' name='[Action (Bathrooms (bin),Bedrooms (bin))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Bathrooms (bin)]' />
          <groupfilter function='level-members' level='[none:Bedrooms (bin):ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Price Trends by Periods of Time)' hidden='true' name='[Action (Price Trends by Periods of Time)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1312799340667265028]' />
        </groupfilter>
      </group>
      <group caption='Action (Yr Built)' hidden='true' name='[Action (Yr Built)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr_built]' />
        </groupfilter>
      </group>
      <group caption='Action (Zipcode)' hidden='true' name='[Action (Zipcode)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[zipcode]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Bathrooms (bin),Bedrooms (bin))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Bathrooms (bin):ok]' />
          <groupfilter function='level-members' level='[none:Bedrooms (bin):ok]' />
        </groupfilter>
      </group>
      <group caption='Yr Renovated Set 2' name='[Yr Renovated Set 2]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter from='1934' function='range' level='[yr_renovated]' to='2015' />
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bathrooms:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ibg9u21a1zdsg17cetup0v5alcd].[ctd:bathrooms:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ibg9u21a1zdsg17cetup0v5alcd].[sum:bathrooms:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bedrooms:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ibg9u21a1zdsg17cetup0v5alcd].[ctd:bedrooms:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:bedrooms:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ibg9u21a1zdsg17cetup0v5alcd].[sum:bedrooms:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[cnt:sqft_lot15:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>50</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>25</bucket>
            </map>
            <map to='#e15759'>
              <bucket>11</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Bedrooms (bin):ok]' type='palette'>
            <map to='#2a5783'>
              <bucket>11</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>33</bucket>
            </map>
            <map to='#376491'>
              <bucket>10</bucket>
            </map>
            <map to='#42709e'>
              <bucket>9</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>8</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>7</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>6</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>5</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>4</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>3</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>2</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>1</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Yr Renovated Set 2:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='regression_data1' id='regression!data1_26A14A7984284464BBB8B91BDC9375F8'>
            <properties context=''>
              <relation connection='excel-direct.01ljpp91bfys5z19oljxb0lazwx7' name='regression_data1' table='[regression_data1$]' type='table'>
                <columns gridOrigin='A1:U21598:no:A1:U21598:0' header='yes' outcome='6'>
                  <column datatype='string' name='id' ordinal='0' />
                  <column datatype='date' name='date' ordinal='1' />
                  <column datatype='integer' name='bedrooms' ordinal='2' />
                  <column datatype='real' name='bathrooms' ordinal='3' />
                  <column datatype='integer' name='sqft_living' ordinal='4' />
                  <column datatype='integer' name='sqft_lot' ordinal='5' />
                  <column datatype='real' name='floors' ordinal='6' />
                  <column datatype='integer' name='waterfront' ordinal='7' />
                  <column datatype='integer' name='view' ordinal='8' />
                  <column datatype='integer' name='condition' ordinal='9' />
                  <column datatype='integer' name='grade' ordinal='10' />
                  <column datatype='integer' name='sqft_above' ordinal='11' />
                  <column datatype='integer' name='sqft_basement' ordinal='12' />
                  <column datatype='integer' name='yr_built' ordinal='13' />
                  <column datatype='integer' name='yr_renovated' ordinal='14' />
                  <column datatype='integer' name='zipcode' ordinal='15' />
                  <column datatype='real' name='lat' ordinal='16' />
                  <column datatype='real' name='long' ordinal='17' />
                  <column datatype='integer' name='sqft_living15' ordinal='18' />
                  <column datatype='integer' name='sqft_lot15' ordinal='19' />
                  <column datatype='integer' name='price' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='raw/reno 1 1' name='[Action10_9EA3D6759D50427D86D1DBFCDDBE7B4C]'>
      <activation type='on-select' />
      <source dashboard='seattle metrics' type='sheet' worksheet='raw/reno sales' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='raw/reno sales' />
        <param name='special-fields' value='all' />
        <param name='target' value='seattle metrics' />
      </command>
    </action>
    <action caption='bedbath bar 1 1' name='[Action11_4F4A3E54699F4310BBA5616BD1780061]'>
      <activation type='on-select' />
      <source dashboard='seattle metrics' type='sheet' worksheet='bedbathbar' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='bedbathbar,bed pi (2)' />
        <param name='special-fields' value='all' />
        <param name='target' value='seattle metrics' />
      </command>
    </action>
    <action caption='Price map filter 1 1' name='[Action12_7C2E2ABCB1834F499FDECD8F8FC2D4FF]'>
      <activation type='on-select' />
      <source dashboard='seattle metrics' type='sheet' worksheet='price map' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='price map' />
        <param name='special-fields' value='all' />
        <param name='target' value='seattle metrics' />
      </command>
    </action>
    <action caption='zip sales map 1 1' name='[Action7_D17132C5271F4A53A8AF123BD2E44425]'>
      <activation type='on-select' />
      <source dashboard='seattle metrics' type='sheet' worksheet='Sales since 2000' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Sales since 2000' />
        <param name='special-fields' value='all' />
        <param name='target' value='seattle metrics' />
      </command>
    </action>
    <action caption='bed pi 1 1' name='[Action9_DEA55FB2753642A1B27981E677C72D43]'>
      <activation type='on-select' />
      <source dashboard='seattle metrics' type='sheet' worksheet='bed pi (2)' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='bed pi (2)' />
        <param name='special-fields' value='all' />
        <param name='target' value='seattle metrics' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sales since 2000'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#203cbc' fontsize='14'>Sales Since 2000 </run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#203cbc' fontsize='14'>(by Zip Code)</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='regression_data1 (regression_data)' name='federated.0ibg9u21a1zdsg17cetup0v5alcd' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ibg9u21a1zdsg17cetup0v5alcd'>
            <column aggregation='None' caption='Bathrooms (bin)' datatype='integer' name='[Bathrooms (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[bathrooms]' peg='0' size='1' />
            </column>
            <column aggregation='None' datatype='integer' name='[Bedrooms (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[bedrooms]' peg='0' size='1' />
            </column>
            <column caption='Price Trends by Periods of Time' datatype='string' name='[Calculation_1312799340667265028]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [yr_built]&lt;2000 THEN &quot;1900-1999&quot;&#13;&#10;ELSEIF [yr_built]&lt;2010 THEN &quot;2000-2009&quot;&#13;&#10;ELSE &quot;2010 - Present&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[lat]' derivation='Avg' name='[avg:lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[long]' derivation='Avg' name='[avg:long:qk]' pivot='key' type='quantitative' />
            <column caption='Bathrooms' datatype='real' name='[bathrooms]' role='measure' type='quantitative' />
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column-instance column='[id]' derivation='Count' name='[cnt:id:qk]' pivot='key' type='quantitative' />
            <column caption='Id' datatype='string' name='[id]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Long' datatype='real' name='[long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Bedrooms (bin)]' derivation='None' name='[none:Bedrooms (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[yr_built]' derivation='None' name='[none:yr_built:ok]' pivot='key' type='ordinal' />
            <column-instance column='[zipcode]' derivation='None' name='[none:zipcode:ok]' pivot='key' type='ordinal' />
            <column caption='Yr Built' datatype='integer' name='[yr_built]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Bathrooms (bin),Bedrooms (bin))]'>
            <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action6_A2582F5EA88441C2A6C330F3EEF5B522]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='3' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[Bathrooms (bin)]' member='2' />
                  <groupfilter function='member' level='[Bathrooms (bin)]' member='3' />
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[Bathrooms (bin)]' />
                <hierarchy name='[none:Bedrooms (bin):ok]' />
              </order>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Price Trends by Periods of Time)]'>
            <groupfilter function='union' user:ui-action-filter='[Action4_26524BA88C0545D6A0977D59FF566067]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_1312799340667265028]' member='&quot;1900-1999&quot;' />
              <groupfilter function='member' level='[Calculation_1312799340667265028]' member='&quot;2010 - Present&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Zipcode)]'>
            <groupfilter function='union' user:ui-action-filter='[Action1_2D9A7A6655F24FBBB52D8DE981D7434D]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[zipcode]' member='98001' />
              <groupfilter function='member' level='[zipcode]' member='98002' />
              <groupfilter function='member' level='[zipcode]' member='98003' />
              <groupfilter function='member' level='[zipcode]' member='98004' />
              <groupfilter function='member' level='[zipcode]' member='98005' />
              <groupfilter function='member' level='[zipcode]' member='98006' />
              <groupfilter function='member' level='[zipcode]' member='98007' />
              <groupfilter function='member' level='[zipcode]' member='98008' />
              <groupfilter function='member' level='[zipcode]' member='98010' />
              <groupfilter function='member' level='[zipcode]' member='98011' />
              <groupfilter function='member' level='[zipcode]' member='98014' />
              <groupfilter function='member' level='[zipcode]' member='98019' />
              <groupfilter function='member' level='[zipcode]' member='98022' />
              <groupfilter function='member' level='[zipcode]' member='98023' />
              <groupfilter function='member' level='[zipcode]' member='98024' />
              <groupfilter function='member' level='[zipcode]' member='98027' />
              <groupfilter function='member' level='[zipcode]' member='98028' />
              <groupfilter function='member' level='[zipcode]' member='98029' />
              <groupfilter function='member' level='[zipcode]' member='98030' />
              <groupfilter function='member' level='[zipcode]' member='98031' />
              <groupfilter function='member' level='[zipcode]' member='98032' />
              <groupfilter function='member' level='[zipcode]' member='98033' />
              <groupfilter function='member' level='[zipcode]' member='98034' />
              <groupfilter function='member' level='[zipcode]' member='98038' />
              <groupfilter function='member' level='[zipcode]' member='98039' />
              <groupfilter function='member' level='[zipcode]' member='98040' />
              <groupfilter function='member' level='[zipcode]' member='98042' />
              <groupfilter function='member' level='[zipcode]' member='98045' />
              <groupfilter function='member' level='[zipcode]' member='98052' />
              <groupfilter function='member' level='[zipcode]' member='98053' />
              <groupfilter function='member' level='[zipcode]' member='98055' />
              <groupfilter function='member' level='[zipcode]' member='98056' />
              <groupfilter function='member' level='[zipcode]' member='98058' />
              <groupfilter function='member' level='[zipcode]' member='98059' />
              <groupfilter function='member' level='[zipcode]' member='98065' />
              <groupfilter function='member' level='[zipcode]' member='98070' />
              <groupfilter function='member' level='[zipcode]' member='98072' />
              <groupfilter function='member' level='[zipcode]' member='98074' />
              <groupfilter function='member' level='[zipcode]' member='98075' />
              <groupfilter function='member' level='[zipcode]' member='98077' />
              <groupfilter function='member' level='[zipcode]' member='98092' />
              <groupfilter function='member' level='[zipcode]' member='98102' />
              <groupfilter function='member' level='[zipcode]' member='98103' />
              <groupfilter function='member' level='[zipcode]' member='98105' />
              <groupfilter function='member' level='[zipcode]' member='98106' />
              <groupfilter function='member' level='[zipcode]' member='98107' />
              <groupfilter function='member' level='[zipcode]' member='98108' />
              <groupfilter function='member' level='[zipcode]' member='98109' />
              <groupfilter function='member' level='[zipcode]' member='98112' />
              <groupfilter function='member' level='[zipcode]' member='98115' />
              <groupfilter function='member' level='[zipcode]' member='98116' />
              <groupfilter function='member' level='[zipcode]' member='98117' />
              <groupfilter function='member' level='[zipcode]' member='98118' />
              <groupfilter function='member' level='[zipcode]' member='98119' />
              <groupfilter function='member' level='[zipcode]' member='98122' />
              <groupfilter function='member' level='[zipcode]' member='98125' />
              <groupfilter function='member' level='[zipcode]' member='98126' />
              <groupfilter function='member' level='[zipcode]' member='98133' />
              <groupfilter function='member' level='[zipcode]' member='98136' />
              <groupfilter function='member' level='[zipcode]' member='98144' />
              <groupfilter function='member' level='[zipcode]' member='98146' />
              <groupfilter function='member' level='[zipcode]' member='98148' />
              <groupfilter function='member' level='[zipcode]' member='98155' />
              <groupfilter function='member' level='[zipcode]' member='98166' />
              <groupfilter function='member' level='[zipcode]' member='98168' />
              <groupfilter function='member' level='[zipcode]' member='98177' />
              <groupfilter function='member' level='[zipcode]' member='98178' />
              <groupfilter function='member' level='[zipcode]' member='98188' />
              <groupfilter function='member' level='[zipcode]' member='98198' />
              <groupfilter function='member' level='[zipcode]' member='98199' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:yr_built:ok]'>
            <groupfilter function='level-members' level='[none:yr_built:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:yr_built:ok]</column>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Zipcode)]</column>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Bathrooms (bin),Bedrooms (bin))]</column>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Price Trends by Periods of Time)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:long:qk]' field-type='quantitative' max='-13435334.11403127' min='-13738378.701626696' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:lat:qk]' field-type='quantitative' max='6085467.7994630132' min='5905560.0565205179' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:id:qk]' value='Sales Count'>
              <formatted-text>
                <run>Sales Count</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:id:qk]' />
              <lod column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:zipcode:ok]' />
              <geometry column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='12'>There were </run>
                <run bold='true' fontcolor='#f17b79' fontsize='12'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:id:qk]>]]></run>
                <run fontcolor='#787878' fontsize='12'> sales in </run>
                <run fontcolor='#898989' fontsize='12'>zip cod</run>
                <run fontcolor='#787878' fontsize='12'>e </run>
                <run bold='true' fontcolor='#f17b79' fontsize='12'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:zipcode:ok]> ]]></run>
                <run bold='true' fontcolor='#b6bfa9' fontsize='12'>.</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:lat:qk]</rows>
        <cols>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[avg:long:qk]</cols>
      </table>
      <simple-id uuid='{6EE36E2C-DCD5-418F-BF21-00CEDDEC39A1}' />
    </worksheet>
    <worksheet name='bed pi (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#203cbc' fontsize='14'>Bed Count Availability</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='regression_data1 (regression_data)' name='federated.0ibg9u21a1zdsg17cetup0v5alcd' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ibg9u21a1zdsg17cetup0v5alcd'>
            <column aggregation='None' datatype='integer' name='[Bedrooms (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[bedrooms]' peg='0' size='1' />
            </column>
            <column caption='Price Trends by Periods of Time' datatype='string' name='[Calculation_1312799340667265028]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [yr_built]&lt;2000 THEN &quot;1900-1999&quot;&#13;&#10;ELSEIF [yr_built]&lt;2010 THEN &quot;2000-2009&quot;&#13;&#10;ELSE &quot;2010 - Present&quot;&#13;&#10;END' />
            </column>
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column-instance column='[bedrooms]' derivation='Count' name='[cnt:bedrooms:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Bedrooms (bin)]' derivation='None' name='[none:Bedrooms (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[bedrooms]' derivation='Sum' name='[sum:bedrooms:qk]' pivot='key' type='quantitative' />
            <column caption='Yr Built' datatype='integer' name='[yr_built]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Price Trends by Periods of Time)]'>
            <groupfilter function='union' user:ui-action-filter='[Action4_26524BA88C0545D6A0977D59FF566067]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_1312799340667265028]' member='&quot;1900-1999&quot;' />
              <groupfilter function='member' level='[Calculation_1312799340667265028]' member='&quot;2010 - Present&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Zipcode)]'>
            <groupfilter function='union' user:ui-action-filter='[Action1_2D9A7A6655F24FBBB52D8DE981D7434D]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[zipcode]' member='98001' />
              <groupfilter function='member' level='[zipcode]' member='98002' />
              <groupfilter function='member' level='[zipcode]' member='98003' />
              <groupfilter function='member' level='[zipcode]' member='98004' />
              <groupfilter function='member' level='[zipcode]' member='98005' />
              <groupfilter function='member' level='[zipcode]' member='98006' />
              <groupfilter function='member' level='[zipcode]' member='98007' />
              <groupfilter function='member' level='[zipcode]' member='98008' />
              <groupfilter function='member' level='[zipcode]' member='98010' />
              <groupfilter function='member' level='[zipcode]' member='98011' />
              <groupfilter function='member' level='[zipcode]' member='98014' />
              <groupfilter function='member' level='[zipcode]' member='98019' />
              <groupfilter function='member' level='[zipcode]' member='98022' />
              <groupfilter function='member' level='[zipcode]' member='98023' />
              <groupfilter function='member' level='[zipcode]' member='98024' />
              <groupfilter function='member' level='[zipcode]' member='98027' />
              <groupfilter function='member' level='[zipcode]' member='98028' />
              <groupfilter function='member' level='[zipcode]' member='98029' />
              <groupfilter function='member' level='[zipcode]' member='98030' />
              <groupfilter function='member' level='[zipcode]' member='98031' />
              <groupfilter function='member' level='[zipcode]' member='98032' />
              <groupfilter function='member' level='[zipcode]' member='98033' />
              <groupfilter function='member' level='[zipcode]' member='98034' />
              <groupfilter function='member' level='[zipcode]' member='98038' />
              <groupfilter function='member' level='[zipcode]' member='98039' />
              <groupfilter function='member' level='[zipcode]' member='98040' />
              <groupfilter function='member' level='[zipcode]' member='98042' />
              <groupfilter function='member' level='[zipcode]' member='98045' />
              <groupfilter function='member' level='[zipcode]' member='98052' />
              <groupfilter function='member' level='[zipcode]' member='98053' />
              <groupfilter function='member' level='[zipcode]' member='98055' />
              <groupfilter function='member' level='[zipcode]' member='98056' />
              <groupfilter function='member' level='[zipcode]' member='98058' />
              <groupfilter function='member' level='[zipcode]' member='98059' />
              <groupfilter function='member' level='[zipcode]' member='98065' />
              <groupfilter function='member' level='[zipcode]' member='98070' />
              <groupfilter function='member' level='[zipcode]' member='98072' />
              <groupfilter function='member' level='[zipcode]' member='98074' />
              <groupfilter function='member' level='[zipcode]' member='98075' />
              <groupfilter function='member' level='[zipcode]' member='98077' />
              <groupfilter function='member' level='[zipcode]' member='98092' />
              <groupfilter function='member' level='[zipcode]' member='98102' />
              <groupfilter function='member' level='[zipcode]' member='98103' />
              <groupfilter function='member' level='[zipcode]' member='98105' />
              <groupfilter function='member' level='[zipcode]' member='98106' />
              <groupfilter function='member' level='[zipcode]' member='98107' />
              <groupfilter function='member' level='[zipcode]' member='98108' />
              <groupfilter function='member' level='[zipcode]' member='98109' />
              <groupfilter function='member' level='[zipcode]' member='98112' />
              <groupfilter function='member' level='[zipcode]' member='98115' />
              <groupfilter function='member' level='[zipcode]' member='98116' />
              <groupfilter function='member' level='[zipcode]' member='98117' />
              <groupfilter function='member' level='[zipcode]' member='98118' />
              <groupfilter function='member' level='[zipcode]' member='98119' />
              <groupfilter function='member' level='[zipcode]' member='98122' />
              <groupfilter function='member' level='[zipcode]' member='98125' />
              <groupfilter function='member' level='[zipcode]' member='98126' />
              <groupfilter function='member' level='[zipcode]' member='98133' />
              <groupfilter function='member' level='[zipcode]' member='98136' />
              <groupfilter function='member' level='[zipcode]' member='98144' />
              <groupfilter function='member' level='[zipcode]' member='98146' />
              <groupfilter function='member' level='[zipcode]' member='98148' />
              <groupfilter function='member' level='[zipcode]' member='98155' />
              <groupfilter function='member' level='[zipcode]' member='98166' />
              <groupfilter function='member' level='[zipcode]' member='98168' />
              <groupfilter function='member' level='[zipcode]' member='98177' />
              <groupfilter function='member' level='[zipcode]' member='98178' />
              <groupfilter function='member' level='[zipcode]' member='98188' />
              <groupfilter function='member' level='[zipcode]' member='98198' />
              <groupfilter function='member' level='[zipcode]' member='98199' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Bedrooms (bin):ok]' />
              <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='33' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]</column>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Zipcode)]</column>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Price Trends by Periods of Time)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]' value='' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]' value='' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]' value='Beds'>
              <formatted-text>
                <run>Beds</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]' />
              <wedge-size column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bedrooms:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#898989' fontsize='12'>Of 21,598 house sales, </run>
                <run bold='true' fontcolor='#f17b79' fontsize='12'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bedrooms:qk]>]]></run>
                <run bold='true' fontcolor='#898989' fontsize='12'> of them contained </run>
                <run bold='true' fontcolor='#f17b79' fontsize='12'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]>]]></run>
                <run bold='true' fontcolor='#898989' fontsize='12'> bedrooms.</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows />
        <cols />
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]</field>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[sum:bedrooms:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>4</value>
                <value>27528</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]</field>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[sum:bedrooms:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>5</value>
                <value>8005</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]</field>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[sum:bedrooms:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>2</value>
                <value>5520</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]</field>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[sum:bedrooms:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>3</value>
                <value>29472</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='4' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]</field>
                  <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[sum:bedrooms:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>6</value>
                <value>1632</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{4CC2F3B8-16F2-44D3-90FE-7764BE004A5C}' />
    </worksheet>
    <worksheet name='bedbathbar'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#203cbc' fontsize='14'>Bath Availability by Bed Count</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='regression_data1 (regression_data)' name='federated.0ibg9u21a1zdsg17cetup0v5alcd' />
          </datasources>
          <datasource-dependencies datasource='federated.0ibg9u21a1zdsg17cetup0v5alcd'>
            <column aggregation='None' caption='Bathrooms (bin)' datatype='integer' name='[Bathrooms (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[bathrooms]' peg='0' size='1' />
            </column>
            <column aggregation='None' datatype='integer' name='[Bedrooms (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[bedrooms]' peg='0' size='1' />
            </column>
            <column caption='Price Trends by Periods of Time' datatype='string' name='[Calculation_1312799340667265028]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [yr_built]&lt;2000 THEN &quot;1900-1999&quot;&#13;&#10;ELSEIF [yr_built]&lt;2010 THEN &quot;2000-2009&quot;&#13;&#10;ELSE &quot;2010 - Present&quot;&#13;&#10;END' />
            </column>
            <column caption='Bathrooms' datatype='real' name='[bathrooms]' role='measure' type='quantitative' />
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column-instance column='[bathrooms]' derivation='Count' name='[cnt:bathrooms:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Bathrooms (bin)]' derivation='None' name='[none:Bathrooms (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Bedrooms (bin)]' derivation='None' name='[none:Bedrooms (bin):ok]' pivot='key' type='ordinal' />
            <column caption='Yr Built' datatype='integer' name='[yr_built]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Price Trends by Periods of Time)]'>
            <groupfilter function='union' user:ui-action-filter='[Action4_26524BA88C0545D6A0977D59FF566067]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_1312799340667265028]' member='&quot;1900-1999&quot;' />
              <groupfilter function='member' level='[Calculation_1312799340667265028]' member='&quot;2010 - Present&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Zipcode)]'>
            <groupfilter function='union' user:ui-action-filter='[Action1_2D9A7A6655F24FBBB52D8DE981D7434D]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[zipcode]' member='98001' />
              <groupfilter function='member' level='[zipcode]' member='98002' />
              <groupfilter function='member' level='[zipcode]' member='98003' />
              <groupfilter function='member' level='[zipcode]' member='98004' />
              <groupfilter function='member' level='[zipcode]' member='98005' />
              <groupfilter function='member' level='[zipcode]' member='98006' />
              <groupfilter function='member' level='[zipcode]' member='98007' />
              <groupfilter function='member' level='[zipcode]' member='98008' />
              <groupfilter function='member' level='[zipcode]' member='98010' />
              <groupfilter function='member' level='[zipcode]' member='98011' />
              <groupfilter function='member' level='[zipcode]' member='98014' />
              <groupfilter function='member' level='[zipcode]' member='98019' />
              <groupfilter function='member' level='[zipcode]' member='98022' />
              <groupfilter function='member' level='[zipcode]' member='98023' />
              <groupfilter function='member' level='[zipcode]' member='98024' />
              <groupfilter function='member' level='[zipcode]' member='98027' />
              <groupfilter function='member' level='[zipcode]' member='98028' />
              <groupfilter function='member' level='[zipcode]' member='98029' />
              <groupfilter function='member' level='[zipcode]' member='98030' />
              <groupfilter function='member' level='[zipcode]' member='98031' />
              <groupfilter function='member' level='[zipcode]' member='98032' />
              <groupfilter function='member' level='[zipcode]' member='98033' />
              <groupfilter function='member' level='[zipcode]' member='98034' />
              <groupfilter function='member' level='[zipcode]' member='98038' />
              <groupfilter function='member' level='[zipcode]' member='98039' />
              <groupfilter function='member' level='[zipcode]' member='98040' />
              <groupfilter function='member' level='[zipcode]' member='98042' />
              <groupfilter function='member' level='[zipcode]' member='98045' />
              <groupfilter function='member' level='[zipcode]' member='98052' />
              <groupfilter function='member' level='[zipcode]' member='98053' />
              <groupfilter function='member' level='[zipcode]' member='98055' />
              <groupfilter function='member' level='[zipcode]' member='98056' />
              <groupfilter function='member' level='[zipcode]' member='98058' />
              <groupfilter function='member' level='[zipcode]' member='98059' />
              <groupfilter function='member' level='[zipcode]' member='98065' />
              <groupfilter function='member' level='[zipcode]' member='98070' />
              <groupfilter function='member' level='[zipcode]' member='98072' />
              <groupfilter function='member' level='[zipcode]' member='98074' />
              <groupfilter function='member' level='[zipcode]' member='98075' />
              <groupfilter function='member' level='[zipcode]' member='98077' />
              <groupfilter function='member' level='[zipcode]' member='98092' />
              <groupfilter function='member' level='[zipcode]' member='98102' />
              <groupfilter function='member' level='[zipcode]' member='98103' />
              <groupfilter function='member' level='[zipcode]' member='98105' />
              <groupfilter function='member' level='[zipcode]' member='98106' />
              <groupfilter function='member' level='[zipcode]' member='98107' />
              <groupfilter function='member' level='[zipcode]' member='98108' />
              <groupfilter function='member' level='[zipcode]' member='98109' />
              <groupfilter function='member' level='[zipcode]' member='98112' />
              <groupfilter function='member' level='[zipcode]' member='98115' />
              <groupfilter function='member' level='[zipcode]' member='98116' />
              <groupfilter function='member' level='[zipcode]' member='98117' />
              <groupfilter function='member' level='[zipcode]' member='98118' />
              <groupfilter function='member' level='[zipcode]' member='98119' />
              <groupfilter function='member' level='[zipcode]' member='98122' />
              <groupfilter function='member' level='[zipcode]' member='98125' />
              <groupfilter function='member' level='[zipcode]' member='98126' />
              <groupfilter function='member' level='[zipcode]' member='98133' />
              <groupfilter function='member' level='[zipcode]' member='98136' />
              <groupfilter function='member' level='[zipcode]' member='98144' />
              <groupfilter function='member' level='[zipcode]' member='98146' />
              <groupfilter function='member' level='[zipcode]' member='98148' />
              <groupfilter function='member' level='[zipcode]' member='98155' />
              <groupfilter function='member' level='[zipcode]' member='98166' />
              <groupfilter function='member' level='[zipcode]' member='98168' />
              <groupfilter function='member' level='[zipcode]' member='98177' />
              <groupfilter function='member' level='[zipcode]' member='98178' />
              <groupfilter function='member' level='[zipcode]' member='98188' />
              <groupfilter function='member' level='[zipcode]' member='98198' />
              <groupfilter function='member' level='[zipcode]' member='98199' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Exclusions (Bathrooms (bin),Bedrooms (bin))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Bathrooms (bin):ok]' />
                <groupfilter function='level-members' level='[none:Bedrooms (bin):ok]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='6' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='1' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='2' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='3' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='4' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='5' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='6' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='7' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='8' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='7' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='1' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='2' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='3' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='4' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='5' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='6' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='8' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='8' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='2' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='3' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='4' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='5' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='6' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='9' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='3' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='4' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='7' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='10' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='2' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='3' />
                      <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='5' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='11' />
                    <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='3' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='33' />
                    <groupfilter function='member' level='[none:Bathrooms (bin):ok]' member='1' />
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:Bathrooms (bin):ok]' />
                  <hierarchy name='[none:Bedrooms (bin):ok]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Exclusions (Bathrooms (bin),Bedrooms (bin))]</column>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Zipcode)]</column>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Price Trends by Periods of Time)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bathrooms:qk]' scope='rows' value='Bathroom Count' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bathrooms (bin):ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#898989' fontsize='12'>Houses with </run>
                <run bold='true' fontcolor='#f17b79' fontsize='12'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]>]]></run>
                <run bold='true' fontcolor='#898989' fontsize='12'> bedrooms have </run>
                <run bold='true' fontcolor='#f17b79' fontsize='12'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bathrooms:qk]>]]></run>
                <run bold='true' fontcolor='#898989' fontsize='12'> sales with </run>
                <run bold='true' fontcolor='#f17b79' fontsize='12'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bathrooms (bin):ok]>]]></run>
                <run bold='true' fontcolor='#898989' fontsize='12'> bathroom(s).</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:bathrooms:qk]</rows>
        <cols>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]</cols>
      </table>
      <simple-id uuid='{EFF8D295-E6FB-4F81-B713-4B4B8214E04F}' />
    </worksheet>
    <worksheet name='decades'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#203cbc' fontsize='14'>Price Trends by Year Built</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='regression_data1 (regression_data)' name='federated.0ibg9u21a1zdsg17cetup0v5alcd' />
          </datasources>
          <datasource-dependencies datasource='federated.0ibg9u21a1zdsg17cetup0v5alcd'>
            <column aggregation='None' caption='Bathrooms (bin)' datatype='integer' name='[Bathrooms (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[bathrooms]' peg='0' size='1' />
            </column>
            <column aggregation='None' datatype='integer' name='[Bedrooms (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[bedrooms]' peg='0' size='1' />
            </column>
            <column caption='Decades ' datatype='string' name='[Calculation_1363746311673958404]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [yr_built]&lt;1910 THEN &quot;1900-1909&quot;&#13;&#10;ELSEIF [yr_built]&lt;1920 THEN &quot;1910-1919&quot;&#13;&#10;ELSEIF [yr_built]&lt;1930 THEN &quot;1920-1929&quot;&#13;&#10;ELSEIF [yr_built]&lt;1940 THEN &quot;1930-1939&quot;&#13;&#10;ELSEIF [yr_built]&lt;1950 THEN &quot;1940-1949&quot;&#13;&#10;ELSEIF [yr_built]&lt;1960 THEN &quot;1950-1959&quot;&#13;&#10;ELSEIF [yr_built]&lt;1970 THEN &quot;1960-1969&quot;&#13;&#10;ELSEIF [yr_built]&lt;1980 THEN &quot;1970-1979&quot;&#13;&#10;ELSEIF [yr_built]&lt;1990 THEN &quot;1980-1989&quot;&#13;&#10;ELSEIF [yr_built]&lt;2000 THEN &quot;1990-1999&quot;&#13;&#10;ELSEIF [yr_built]&lt;2010 THEN &quot;2000-2009&quot;&#13;&#10;ELSE &quot;2010 - Present&quot;&#13;&#10;END' />
            </column>
            <column caption='Bathrooms' datatype='real' name='[bathrooms]' role='measure' type='quantitative' />
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column-instance column='[id]' derivation='CountD' name='[ctd:id:qk]' pivot='key' type='quantitative' />
            <column caption='Id' datatype='string' name='[id]' role='dimension' type='nominal' />
            <column-instance column='[price]' derivation='Median' name='[med:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sqft_living]' derivation='Median' name='[med:sqft_living:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Bedrooms (bin)]' derivation='None' name='[none:Bedrooms (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1363746311673958404]' derivation='None' name='[none:Calculation_1363746311673958404:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Sqft Living' datatype='integer' name='[sqft_living]' role='measure' type='quantitative' />
            <column caption='Yr Built' datatype='integer' name='[yr_built]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Bathrooms (bin),Bedrooms (bin))]'>
            <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action6_A2582F5EA88441C2A6C330F3EEF5B522]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='3' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[Bathrooms (bin)]' member='2' />
                  <groupfilter function='member' level='[Bathrooms (bin)]' member='3' />
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[Bathrooms (bin)]' />
                <hierarchy name='[none:Bedrooms (bin):ok]' />
              </order>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Zipcode)]'>
            <groupfilter function='union' user:ui-action-filter='[Action1_2D9A7A6655F24FBBB52D8DE981D7434D]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[zipcode]' member='98001' />
              <groupfilter function='member' level='[zipcode]' member='98002' />
              <groupfilter function='member' level='[zipcode]' member='98003' />
              <groupfilter function='member' level='[zipcode]' member='98004' />
              <groupfilter function='member' level='[zipcode]' member='98005' />
              <groupfilter function='member' level='[zipcode]' member='98006' />
              <groupfilter function='member' level='[zipcode]' member='98007' />
              <groupfilter function='member' level='[zipcode]' member='98008' />
              <groupfilter function='member' level='[zipcode]' member='98010' />
              <groupfilter function='member' level='[zipcode]' member='98011' />
              <groupfilter function='member' level='[zipcode]' member='98014' />
              <groupfilter function='member' level='[zipcode]' member='98019' />
              <groupfilter function='member' level='[zipcode]' member='98022' />
              <groupfilter function='member' level='[zipcode]' member='98023' />
              <groupfilter function='member' level='[zipcode]' member='98024' />
              <groupfilter function='member' level='[zipcode]' member='98027' />
              <groupfilter function='member' level='[zipcode]' member='98028' />
              <groupfilter function='member' level='[zipcode]' member='98029' />
              <groupfilter function='member' level='[zipcode]' member='98030' />
              <groupfilter function='member' level='[zipcode]' member='98031' />
              <groupfilter function='member' level='[zipcode]' member='98032' />
              <groupfilter function='member' level='[zipcode]' member='98033' />
              <groupfilter function='member' level='[zipcode]' member='98034' />
              <groupfilter function='member' level='[zipcode]' member='98038' />
              <groupfilter function='member' level='[zipcode]' member='98039' />
              <groupfilter function='member' level='[zipcode]' member='98040' />
              <groupfilter function='member' level='[zipcode]' member='98042' />
              <groupfilter function='member' level='[zipcode]' member='98045' />
              <groupfilter function='member' level='[zipcode]' member='98052' />
              <groupfilter function='member' level='[zipcode]' member='98053' />
              <groupfilter function='member' level='[zipcode]' member='98055' />
              <groupfilter function='member' level='[zipcode]' member='98056' />
              <groupfilter function='member' level='[zipcode]' member='98058' />
              <groupfilter function='member' level='[zipcode]' member='98059' />
              <groupfilter function='member' level='[zipcode]' member='98065' />
              <groupfilter function='member' level='[zipcode]' member='98070' />
              <groupfilter function='member' level='[zipcode]' member='98072' />
              <groupfilter function='member' level='[zipcode]' member='98074' />
              <groupfilter function='member' level='[zipcode]' member='98075' />
              <groupfilter function='member' level='[zipcode]' member='98077' />
              <groupfilter function='member' level='[zipcode]' member='98092' />
              <groupfilter function='member' level='[zipcode]' member='98102' />
              <groupfilter function='member' level='[zipcode]' member='98103' />
              <groupfilter function='member' level='[zipcode]' member='98105' />
              <groupfilter function='member' level='[zipcode]' member='98106' />
              <groupfilter function='member' level='[zipcode]' member='98107' />
              <groupfilter function='member' level='[zipcode]' member='98108' />
              <groupfilter function='member' level='[zipcode]' member='98109' />
              <groupfilter function='member' level='[zipcode]' member='98112' />
              <groupfilter function='member' level='[zipcode]' member='98115' />
              <groupfilter function='member' level='[zipcode]' member='98116' />
              <groupfilter function='member' level='[zipcode]' member='98117' />
              <groupfilter function='member' level='[zipcode]' member='98118' />
              <groupfilter function='member' level='[zipcode]' member='98119' />
              <groupfilter function='member' level='[zipcode]' member='98122' />
              <groupfilter function='member' level='[zipcode]' member='98125' />
              <groupfilter function='member' level='[zipcode]' member='98126' />
              <groupfilter function='member' level='[zipcode]' member='98133' />
              <groupfilter function='member' level='[zipcode]' member='98136' />
              <groupfilter function='member' level='[zipcode]' member='98144' />
              <groupfilter function='member' level='[zipcode]' member='98146' />
              <groupfilter function='member' level='[zipcode]' member='98148' />
              <groupfilter function='member' level='[zipcode]' member='98155' />
              <groupfilter function='member' level='[zipcode]' member='98166' />
              <groupfilter function='member' level='[zipcode]' member='98168' />
              <groupfilter function='member' level='[zipcode]' member='98177' />
              <groupfilter function='member' level='[zipcode]' member='98178' />
              <groupfilter function='member' level='[zipcode]' member='98188' />
              <groupfilter function='member' level='[zipcode]' member='98198' />
              <groupfilter function='member' level='[zipcode]' member='98199' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Zipcode)]</column>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Bathrooms (bin),Bedrooms (bin))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:price:qk]' scope='rows' value='Average Price' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:sqft_living:qk]' value='Median GLA' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:sqft_living:qk]' />
              <size column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[ctd:id:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#898989' fontsize='12'>Of the </run>
                <run bold='true' fontcolor='#f17b79' fontsize='12'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[ctd:id:qk]>]]></run>
                <run bold='true' fontcolor='#898989' fontsize='12'> houses sold in 2014-2015 built in this time span, the median square foot of living space was </run>
                <run bold='true' fontcolor='#f17b79' fontsize='12'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:sqft_living:qk]>]]></run>
                <run bold='true' fontcolor='#898989' fontsize='12'> and the  average price  was $</run>
                <run bold='true' fontcolor='#f17b79' fontsize='12'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:price:qk]>]]></run>
                <run bold='true' fontcolor='#898989' fontsize='12'>.</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:price:qk]</rows>
        <cols>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Calculation_1363746311673958404:nk]</cols>
      </table>
      <simple-id uuid='{BCAA0499-7633-4F76-9451-C1DE77FBBA29}' />
    </worksheet>
    <worksheet name='price map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#203cbc' fontsize='14'>Median Prices of Homes Sold </run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#203cbc' fontsize='14'>(by Zip Code)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='regression_data1 (regression_data)' name='federated.0ibg9u21a1zdsg17cetup0v5alcd' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ibg9u21a1zdsg17cetup0v5alcd'>
            <column aggregation='None' caption='Bathrooms (bin)' datatype='integer' name='[Bathrooms (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[bathrooms]' peg='0' size='1' />
            </column>
            <column aggregation='None' datatype='integer' name='[Bedrooms (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[bedrooms]' peg='0' size='1' />
            </column>
            <column caption='Price Trends by Periods of Time' datatype='string' name='[Calculation_1312799340667265028]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [yr_built]&lt;2000 THEN &quot;1900-1999&quot;&#13;&#10;ELSEIF [yr_built]&lt;2010 THEN &quot;2000-2009&quot;&#13;&#10;ELSE &quot;2010 - Present&quot;&#13;&#10;END' />
            </column>
            <column caption='Bathrooms' datatype='real' name='[bathrooms]' role='measure' type='quantitative' />
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column-instance column='[price]' derivation='Median' name='[med:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Bedrooms (bin)]' derivation='None' name='[none:Bedrooms (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[zipcode]' derivation='None' name='[none:zipcode:ok]' pivot='key' type='ordinal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Yr Built' datatype='integer' name='[yr_built]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Bathrooms (bin),Bedrooms (bin))]'>
            <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action6_A2582F5EA88441C2A6C330F3EEF5B522]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='3' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[Bathrooms (bin)]' member='2' />
                  <groupfilter function='member' level='[Bathrooms (bin)]' member='3' />
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[Bathrooms (bin)]' />
                <hierarchy name='[none:Bedrooms (bin):ok]' />
              </order>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Price Trends by Periods of Time)]'>
            <groupfilter function='union' user:ui-action-filter='[Action4_26524BA88C0545D6A0977D59FF566067]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_1312799340667265028]' member='&quot;1900-1999&quot;' />
              <groupfilter function='member' level='[Calculation_1312799340667265028]' member='&quot;2010 - Present&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Zipcode)]'>
            <groupfilter function='union' user:ui-action-filter='[Action2_11E2714E74D74FC3A3DF01F673020DB2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[zipcode]' member='98001' />
              <groupfilter function='member' level='[zipcode]' member='98002' />
              <groupfilter function='member' level='[zipcode]' member='98003' />
              <groupfilter function='member' level='[zipcode]' member='98004' />
              <groupfilter function='member' level='[zipcode]' member='98005' />
              <groupfilter function='member' level='[zipcode]' member='98006' />
              <groupfilter function='member' level='[zipcode]' member='98007' />
              <groupfilter function='member' level='[zipcode]' member='98008' />
              <groupfilter function='member' level='[zipcode]' member='98010' />
              <groupfilter function='member' level='[zipcode]' member='98011' />
              <groupfilter function='member' level='[zipcode]' member='98014' />
              <groupfilter function='member' level='[zipcode]' member='98019' />
              <groupfilter function='member' level='[zipcode]' member='98022' />
              <groupfilter function='member' level='[zipcode]' member='98023' />
              <groupfilter function='member' level='[zipcode]' member='98024' />
              <groupfilter function='member' level='[zipcode]' member='98027' />
              <groupfilter function='member' level='[zipcode]' member='98028' />
              <groupfilter function='member' level='[zipcode]' member='98029' />
              <groupfilter function='member' level='[zipcode]' member='98030' />
              <groupfilter function='member' level='[zipcode]' member='98031' />
              <groupfilter function='member' level='[zipcode]' member='98032' />
              <groupfilter function='member' level='[zipcode]' member='98033' />
              <groupfilter function='member' level='[zipcode]' member='98034' />
              <groupfilter function='member' level='[zipcode]' member='98038' />
              <groupfilter function='member' level='[zipcode]' member='98039' />
              <groupfilter function='member' level='[zipcode]' member='98040' />
              <groupfilter function='member' level='[zipcode]' member='98042' />
              <groupfilter function='member' level='[zipcode]' member='98045' />
              <groupfilter function='member' level='[zipcode]' member='98052' />
              <groupfilter function='member' level='[zipcode]' member='98053' />
              <groupfilter function='member' level='[zipcode]' member='98055' />
              <groupfilter function='member' level='[zipcode]' member='98056' />
              <groupfilter function='member' level='[zipcode]' member='98058' />
              <groupfilter function='member' level='[zipcode]' member='98059' />
              <groupfilter function='member' level='[zipcode]' member='98065' />
              <groupfilter function='member' level='[zipcode]' member='98070' />
              <groupfilter function='member' level='[zipcode]' member='98072' />
              <groupfilter function='member' level='[zipcode]' member='98074' />
              <groupfilter function='member' level='[zipcode]' member='98075' />
              <groupfilter function='member' level='[zipcode]' member='98077' />
              <groupfilter function='member' level='[zipcode]' member='98092' />
              <groupfilter function='member' level='[zipcode]' member='98102' />
              <groupfilter function='member' level='[zipcode]' member='98103' />
              <groupfilter function='member' level='[zipcode]' member='98105' />
              <groupfilter function='member' level='[zipcode]' member='98106' />
              <groupfilter function='member' level='[zipcode]' member='98107' />
              <groupfilter function='member' level='[zipcode]' member='98108' />
              <groupfilter function='member' level='[zipcode]' member='98109' />
              <groupfilter function='member' level='[zipcode]' member='98112' />
              <groupfilter function='member' level='[zipcode]' member='98115' />
              <groupfilter function='member' level='[zipcode]' member='98116' />
              <groupfilter function='member' level='[zipcode]' member='98117' />
              <groupfilter function='member' level='[zipcode]' member='98118' />
              <groupfilter function='member' level='[zipcode]' member='98119' />
              <groupfilter function='member' level='[zipcode]' member='98122' />
              <groupfilter function='member' level='[zipcode]' member='98125' />
              <groupfilter function='member' level='[zipcode]' member='98126' />
              <groupfilter function='member' level='[zipcode]' member='98133' />
              <groupfilter function='member' level='[zipcode]' member='98136' />
              <groupfilter function='member' level='[zipcode]' member='98144' />
              <groupfilter function='member' level='[zipcode]' member='98146' />
              <groupfilter function='member' level='[zipcode]' member='98148' />
              <groupfilter function='member' level='[zipcode]' member='98155' />
              <groupfilter function='member' level='[zipcode]' member='98166' />
              <groupfilter function='member' level='[zipcode]' member='98168' />
              <groupfilter function='member' level='[zipcode]' member='98177' />
              <groupfilter function='member' level='[zipcode]' member='98178' />
              <groupfilter function='member' level='[zipcode]' member='98188' />
              <groupfilter function='member' level='[zipcode]' member='98198' />
              <groupfilter function='member' level='[zipcode]' member='98199' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Zipcode)]</column>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Bathrooms (bin),Bedrooms (bin))]</column>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Price Trends by Periods of Time)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Longitude (generated)]' field-type='quantitative' max='-13447064.314215234' min='-13714251.826617677' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Latitude (generated)]' field-type='quantitative' max='6087279.2862536395' min='5939058.4721526671' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:price:qk]' palette='blue_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:price:qk]' />
              <lod column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:zipcode:ok]' />
              <geometry column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#898989' fontsize='12'>The median price for zip code </run>
                <run bold='true' fontcolor='#f17b79' fontsize='12'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:zipcode:ok]>]]></run>
                <run bold='true' fontcolor='#898989' fontsize='12'> is $</run>
                <run bold='true' fontcolor='#f17b79' fontsize='12'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:price:qk]>]]></run>
                <run bold='true' fontcolor='#b4b4b4' fontsize='12'>.</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Latitude (generated)]</rows>
        <cols>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{FB8295C7-665D-4D88-9ABA-E9E286CF8F73}' />
    </worksheet>
    <worksheet name='raw/reno sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#203cbc' fontsize='14'>Renovation Sales vs Original Design</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='regression_data1 (regression_data)' name='federated.0ibg9u21a1zdsg17cetup0v5alcd' />
          </datasources>
          <datasource-dependencies datasource='federated.0ibg9u21a1zdsg17cetup0v5alcd'>
            <column aggregation='None' caption='Bathrooms (bin)' datatype='integer' name='[Bathrooms (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[bathrooms]' peg='0' size='1' />
            </column>
            <column aggregation='None' datatype='integer' name='[Bedrooms (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[bedrooms]' peg='0' size='1' />
            </column>
            <column caption='Price Trends by Periods of Time' datatype='string' name='[Calculation_1312799340667265028]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [yr_built]&lt;2000 THEN &quot;1900-1999&quot;&#13;&#10;ELSEIF [yr_built]&lt;2010 THEN &quot;2000-2009&quot;&#13;&#10;ELSE &quot;2010 - Present&quot;&#13;&#10;END' />
            </column>
            <column caption='Bathrooms' datatype='real' name='[bathrooms]' role='measure' type='quantitative' />
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column-instance column='[Yr Renovated Set 2]' derivation='InOut' name='[io:Yr Renovated Set 2:nk]' pivot='key' type='nominal' />
            <column-instance column='[Bedrooms (bin)]' derivation='None' name='[none:Bedrooms (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[yr_built]' derivation='None' name='[none:yr_built:qk]' pivot='key' type='quantitative' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[price]' derivation='Median' name='[win:med:price:qk:21]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-5' ordering-type='Field' to='5' type='WindowTotal' window-options='IncludeCurrent'>
                <order field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[io:Yr Renovated Set 2:nk]' />
                <order field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:yr_built:qk]' />
              </table-calc>
            </column-instance>
            <column caption='Yr Built' datatype='integer' name='[yr_built]' role='dimension' type='ordinal' />
            <column caption='Yr Renovated' datatype='integer' name='[yr_renovated]' role='dimension' type='quantitative' />
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Bathrooms (bin),Bedrooms (bin))]'>
            <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action6_A2582F5EA88441C2A6C330F3EEF5B522]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Bedrooms (bin):ok]' member='3' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[Bathrooms (bin)]' member='2' />
                  <groupfilter function='member' level='[Bathrooms (bin)]' member='3' />
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[Bathrooms (bin)]' />
                <hierarchy name='[none:Bedrooms (bin):ok]' />
              </order>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Price Trends by Periods of Time)]'>
            <groupfilter function='union' user:ui-action-filter='[Action4_26524BA88C0545D6A0977D59FF566067]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_1312799340667265028]' member='&quot;1900-1999&quot;' />
              <groupfilter function='member' level='[Calculation_1312799340667265028]' member='&quot;2010 - Present&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Zipcode)]'>
            <groupfilter function='union' user:ui-action-filter='[Action1_2D9A7A6655F24FBBB52D8DE981D7434D]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[zipcode]' member='98001' />
              <groupfilter function='member' level='[zipcode]' member='98002' />
              <groupfilter function='member' level='[zipcode]' member='98003' />
              <groupfilter function='member' level='[zipcode]' member='98004' />
              <groupfilter function='member' level='[zipcode]' member='98005' />
              <groupfilter function='member' level='[zipcode]' member='98006' />
              <groupfilter function='member' level='[zipcode]' member='98007' />
              <groupfilter function='member' level='[zipcode]' member='98008' />
              <groupfilter function='member' level='[zipcode]' member='98010' />
              <groupfilter function='member' level='[zipcode]' member='98011' />
              <groupfilter function='member' level='[zipcode]' member='98014' />
              <groupfilter function='member' level='[zipcode]' member='98019' />
              <groupfilter function='member' level='[zipcode]' member='98022' />
              <groupfilter function='member' level='[zipcode]' member='98023' />
              <groupfilter function='member' level='[zipcode]' member='98024' />
              <groupfilter function='member' level='[zipcode]' member='98027' />
              <groupfilter function='member' level='[zipcode]' member='98028' />
              <groupfilter function='member' level='[zipcode]' member='98029' />
              <groupfilter function='member' level='[zipcode]' member='98030' />
              <groupfilter function='member' level='[zipcode]' member='98031' />
              <groupfilter function='member' level='[zipcode]' member='98032' />
              <groupfilter function='member' level='[zipcode]' member='98033' />
              <groupfilter function='member' level='[zipcode]' member='98034' />
              <groupfilter function='member' level='[zipcode]' member='98038' />
              <groupfilter function='member' level='[zipcode]' member='98039' />
              <groupfilter function='member' level='[zipcode]' member='98040' />
              <groupfilter function='member' level='[zipcode]' member='98042' />
              <groupfilter function='member' level='[zipcode]' member='98045' />
              <groupfilter function='member' level='[zipcode]' member='98052' />
              <groupfilter function='member' level='[zipcode]' member='98053' />
              <groupfilter function='member' level='[zipcode]' member='98055' />
              <groupfilter function='member' level='[zipcode]' member='98056' />
              <groupfilter function='member' level='[zipcode]' member='98058' />
              <groupfilter function='member' level='[zipcode]' member='98059' />
              <groupfilter function='member' level='[zipcode]' member='98065' />
              <groupfilter function='member' level='[zipcode]' member='98070' />
              <groupfilter function='member' level='[zipcode]' member='98072' />
              <groupfilter function='member' level='[zipcode]' member='98074' />
              <groupfilter function='member' level='[zipcode]' member='98075' />
              <groupfilter function='member' level='[zipcode]' member='98077' />
              <groupfilter function='member' level='[zipcode]' member='98092' />
              <groupfilter function='member' level='[zipcode]' member='98102' />
              <groupfilter function='member' level='[zipcode]' member='98103' />
              <groupfilter function='member' level='[zipcode]' member='98105' />
              <groupfilter function='member' level='[zipcode]' member='98106' />
              <groupfilter function='member' level='[zipcode]' member='98107' />
              <groupfilter function='member' level='[zipcode]' member='98108' />
              <groupfilter function='member' level='[zipcode]' member='98109' />
              <groupfilter function='member' level='[zipcode]' member='98112' />
              <groupfilter function='member' level='[zipcode]' member='98115' />
              <groupfilter function='member' level='[zipcode]' member='98116' />
              <groupfilter function='member' level='[zipcode]' member='98117' />
              <groupfilter function='member' level='[zipcode]' member='98118' />
              <groupfilter function='member' level='[zipcode]' member='98119' />
              <groupfilter function='member' level='[zipcode]' member='98122' />
              <groupfilter function='member' level='[zipcode]' member='98125' />
              <groupfilter function='member' level='[zipcode]' member='98126' />
              <groupfilter function='member' level='[zipcode]' member='98133' />
              <groupfilter function='member' level='[zipcode]' member='98136' />
              <groupfilter function='member' level='[zipcode]' member='98144' />
              <groupfilter function='member' level='[zipcode]' member='98146' />
              <groupfilter function='member' level='[zipcode]' member='98148' />
              <groupfilter function='member' level='[zipcode]' member='98155' />
              <groupfilter function='member' level='[zipcode]' member='98166' />
              <groupfilter function='member' level='[zipcode]' member='98168' />
              <groupfilter function='member' level='[zipcode]' member='98177' />
              <groupfilter function='member' level='[zipcode]' member='98178' />
              <groupfilter function='member' level='[zipcode]' member='98188' />
              <groupfilter function='member' level='[zipcode]' member='98198' />
              <groupfilter function='member' level='[zipcode]' member='98199' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Zipcode)]</column>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Bathrooms (bin),Bedrooms (bin))]</column>
            <column>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Action (Price Trends by Periods of Time)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[win:med:price:qk:21]' scope='rows' value='Average Median Price' />
            <format attr='title' class='0' field='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:yr_built:qk]' scope='cols' value='Year Built' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[io:Yr Renovated Set 2:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#898989' fontsize='12'>Houses built in </run>
                <run bold='true' fontcolor='#f17b79' fontsize='12'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:yr_built:qk]>]]></run>
                <run bold='true' fontcolor='#898989' fontsize='12'> sold for a median price of $</run>
                <run bold='true' fontcolor='#f17b79' fontsize='12'><![CDATA[<[federated.0ibg9u21a1zdsg17cetup0v5alcd].[win:med:price:qk:21]>]]></run>
                <run bold='true' fontcolor='#898989' fontsize='12'>.</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[win:med:price:qk:21]</rows>
        <cols>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:yr_built:qk]</cols>
      </table>
      <simple-id uuid='{5A8010EA-274C-40B3-A9CF-58823A6DA932}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='seattle metrics'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#203cbc' fontsize='22'>Seattle Area Housing Market Metrics</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run bold='true' fontalignment='1' fontcolor='#47c9d0'>21,598 sales in 2014 - 2015</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f5f5f5' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='background-color' value='#ffffff' />
          <format attr='border-style' value='solid' />
          <format attr='border-width' value='2' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='700' maxwidth='1300' minheight='700' minwidth='1300' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97714' id='70' param='horz' type-v2='layout-flow' w='98770' x='615' y='1143'>
            <zone h='97714' id='43' param='horz' type-v2='layout-flow' w='86462' x='615' y='1143'>
              <zone h='97714' id='19' param='vert' type-v2='layout-flow' w='86462' x='615' y='1143'>
                <zone fixed-size='87' h='13572' id='20' is-fixed='true' type-v2='title' w='86462' x='615' y='1143'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='84142' id='7' param='horz' type-v2='layout-flow' w='86462' x='615' y='14715'>
                  <zone h='84142' id='5' type-v2='layout-basic' w='86462' x='615' y='14715' />
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='97714' id='69' is-fixed='true' param='vert' type-v2='layout-flow' w='12308' x='87077' y='1143' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='32143' id='68' name='decades' w='32769' x='65769' y='16143' />
        <zone h='42286' id='3' name='price map' w='31692' x='1231' y='16000' />
        <zone h='42000' id='9' name='Sales since 2000' w='29417' x='34500' y='16143' />
        <zone h='38714' id='13' name='bed pi (2)' w='31667' x='1250' y='61714' />
        <zone h='10857' id='33' name='Sales since 2000' pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:id:qk]' type-v2='color' w='11667' x='34333' y='49143' />
        <zone h='10857' id='36' name='price map' pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:price:qk]' type-v2='color' w='11667' x='1500' y='47571' />
        <zone h='12286' id='44' name='bed pi (2)' pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]' type-v2='color' w='26667' x='4917' y='92286' />
        <zone h='11857' id='45' is-centered='0' is-scaled='1' param='C:/Users/Owner/Pictures/trevipay logo.png' type-v2='bitmap' w='9667' x='1167' y='1857' />
        <zone h='38429' id='15' name='bedbathbar' w='29308' x='35692' y='61571' />
        <zone h='41000' id='11' name='raw/reno sales' w='32250' x='66083' y='61571' />
        <zone h='8286' id='72' name='decades' pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:sqft_living:qk]' type-v2='color' w='13846' x='65692' y='48714' />
        <zone h='12143' id='71' name='decades' pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[ctd:id:qk]' type-v2='size' w='19385' x='79385' y='48714' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#203cbc' fontsize='22'>Seattle Area Housing Market Metrics</run>
                <run fontalignment='1'>Æ&#10;</run>
                <run bold='true' fontalignment='1' fontcolor='#47c9d0'>21,598 sales in 2014 - 2015</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='2200' minheight='2200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='82' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97714' id='81' param='vert' type-v2='layout-flow' w='98770' x='615' y='1143'>
                <zone fixed-size='87' h='13572' id='20' type-v2='title' w='86462' x='615' y='1143'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='83' h='11857' id='45' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/Owner/Pictures/trevipay logo.png' type-v2='bitmap' w='9667' x='1167' y='1857'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42286' id='3' is-fixed='true' name='price map' w='31692' x='1231' y='16000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10857' id='36' name='price map' pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:price:qk]' type-v2='color' w='11667' x='1500' y='47571'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42000' id='9' is-fixed='true' name='Sales since 2000' w='29417' x='34500' y='16143'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10857' id='33' name='Sales since 2000' pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:id:qk]' type-v2='color' w='11667' x='34333' y='49143'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='225' h='32143' id='68' is-fixed='true' name='decades' w='32769' x='65769' y='16143'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8286' id='72' name='decades' pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:sqft_living:qk]' type-v2='color' w='13846' x='65692' y='48714'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12143' id='71' name='decades' pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[ctd:id:qk]' type-v2='size' w='19385' x='79385' y='48714'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='269' h='38429' id='15' is-fixed='true' name='bedbathbar' w='29308' x='35692' y='61571'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41000' id='11' is-fixed='true' name='raw/reno sales' w='32250' x='66083' y='61571'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='271' h='38714' id='13' is-fixed='true' name='bed pi (2)' w='31667' x='1250' y='61714'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12286' id='44' name='bed pi (2)' pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]' type-v2='color' w='26667' x='4917' y='92286'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F944B882-6C75-462F-BE77-97A264763D86}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' name='seattle metrics'>
      <viewpoints>
        <viewpoint name='Sales since 2000'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='bed pi (2)'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='bedbathbar'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='decades'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='price map'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Longitude (generated)]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Latitude (generated)]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:price:qk]</field>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:zipcode:ok]</field>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Geometry (generated)]</field>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Latitude (generated)]</field>
                    <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Longitude (generated)]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>1100000.0</value>
                  <value>98004</value>
                  <value>&quot;POLYGON((-122.2203 47.6154,-122.228 47.621,-122.2279 47.6359,-122.2327 47.6393,-122.2228 47.6412,-122.2213 47.6484,-122.2139 47.6528,-122.211 47.6483,-122.2138 47.6427,-122.1963 47.6429,-122.1963 47.6464,-122.1868 47.6464,-122.1862 47.6365,-122.1827 47.6235,-122.1832 47.6132,-122.1881 47.5938,-122.1863 47.5892,-122.191 47.586,-122.1886 47.5795,-122.1981 47.5794,-122.2034 47.5819,-122.2152 47.6029,-122.2146 47.6088,-122.2203 47.6154))&quot;</value>
                  <value>47.6183</value>
                  <value>-122.2033</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='raw/reno sales'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{7DEFEADC-2064-4707-ACDA-E2EBD7DB1DEC}' />
    </window>
    <window class='worksheet' name='raw/reno sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[io:Yr Renovated Set 2:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[io:Yr Renovated Set 2:nk]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:yr_built:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B548D59F-816E-49A2-98F5-02CE317F463F}' />
    </window>
    <window class='worksheet' name='price map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:price:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[Latitude (generated)]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:price:qk]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[prc10:zipcode:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{567EEA5F-8952-4372-BC68-6CACC3BFFFCC}' />
    </window>
    <window class='worksheet' name='Sales since 2000'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:id:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[cnt:id:qk]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:id:ok]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:yr_built:ok]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:zipcode:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{61BC908A-7F71-4BD9-84A0-CACE60CD90D5}' />
    </window>
    <window class='worksheet' name='bed pi (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):ok]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):qk]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:zipcode:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{7D4557D3-8A04-4CF8-BD8B-C248136C179A}' />
    </window>
    <window class='worksheet' maximized='true' name='decades'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[ctd:id:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[med:sqft_living:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Calculation_1312799340667265028:nk]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Calculation_1363746311673958404:nk]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0666F6E1-5CC0-4964-A014-EDB99792A079}' />
    </window>
    <window class='worksheet' name='bedbathbar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bathrooms (bin):ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[:Measure Names]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bathrooms (bin):ok]</field>
            <field>[federated.0ibg9u21a1zdsg17cetup0v5alcd].[none:Bedrooms (bin):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DE8FD508-696B-4C5D-92E2-4D8E6888B977}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sales since 2000' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='bed pi (2)' width='192'>
      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
      gJT2/1XCXpkySVfkAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='bedbathbar' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='decades' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='price map' width='192'>
      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
      ceX/D47oMxRKGvb4AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='raw/reno sales' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='seattle metrics' width='192'>
      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
      EuJxAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
